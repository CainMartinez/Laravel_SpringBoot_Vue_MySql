services:
  vue:
    build:
      context: ./frontend-vue
    container_name: vue_container
    ports:
      - "8085:8085"
    volumes:
      - ./frontend-vue:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - laravel
      - springboot
      - mysql
      - redis
    environment:
      VITE_PORT: 8085

  react:
    build:
      context: ./frontend-react
    container_name: react_container
    ports:
      - "8086:8086"
    volumes:
      - ./frontend-react:/app
      - /app/node_modules
      - /app/public
    depends_on:
      - laravel
      - springboot
      - mysql
      - redis
    environment:
      PORT: 8086

  laravel:
    build:
      context: ./backend-laravel
    container_name: laravel_container
    ports:
      - "8000:8000"
    volumes:
      - ./backend-laravel:/var/www/html
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql_container
      DB_PORT: 3306
      DB_DATABASE: QoRders
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis_container
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - mysql
      - redis
    command: >+
      bash -c "/usr/local/bin/wait-for-it.sh mysql_container 3306 ${DB_USERNAME} ${DB_PASSWORD} ${DB_DATABASE} -- 
              php artisan key:generate &&
              php artisan serve --host=0.0.0.0 --port=8000"

  springboot:
    build:
      context: ./backend-springboot
    container_name: springboot_container
    ports:
      - "8081:8081"
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
      - ./backend-springboot/logs:/app/logs
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_container:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_REDIS_HOST: redis_container
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - mysql
      - laravel
      - redis
    command: >
      bash -c "/app/wait-for-it.sh mysql_container 3306 root root QoRders --
            java -jar app.jar"

  springboot_payment:
    build:
      context: ./backend-spring_boot
    container_name: spring_boot_container
    ports:
      - "8079:8079"
    command: >
      bash -c "java -jar app.jar"

  resend:
    build:
      context: ./resend-express
    container_name: resend_container
    ports:
      - "3000:3000"
    volumes:
      - ./resend-express:/app
      - /app/node_modules
    depends_on:
      - mysql
      - redis
    environment:
      RESEND_API_KEY: ${RESEND_API_KEY}
    command: >
      sh -c "npm install && node app/server.js"

  ultramsg:
    build:
      context: ./ultramsg-fastify
    container_name: ultramsg_container
    ports:
      - "3001:3001"
    volumes:
      - ./ultramsg-fastify:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      ULTRAMSG_INSTANCE_ID: ${ULTRAMSG_INSTANCE_ID}
      ULTRAMSG_TOKEN: ${ULTRAMSG_TOKEN}
      REDIS_HOST: redis_container
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: >
      sh -c "npm install && npm run dev"

  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/${DB_DATABASE}.sql:/docker-entrypoint-initdb.d/${DB_DATABASE}.sql

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    volumes:
      - redis_data:/data

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    container_name: phpmyadmin_container
    platform: linux/amd64
    restart: always
    ports:
      - "8087:80"
    environment:
      PMA_HOST: mysql_container
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql

  nginx-proxy:
    image: nginx:1.27.3
    container_name: nginx_proxy
    ports:
      - "8090:80"
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - laravel
      - springboot
  
  stripe:
    build:
      context: ./stripe-payment
    container_name: stripe_container
    ports:
      - "3002:3002"
    volumes:
      - ./stripe-payment:/app
      - /app/node_modules
    environment:
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    depends_on:
      - redis
    command: >
      sh -c "npm install && node server.js"

volumes:
  mysql_data:
  redis_data:
